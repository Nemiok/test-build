{"version":3,"file":"static/chunks/pages/index-b098c2f1cdae3ee7.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@emotion/memoize/dist/emotion-memoize.esm.js","webpack://_N_E/./node_modules/@emotion/is-prop-valid/dist/emotion-is-prop-valid.esm.js","webpack://_N_E/./node_modules/@linaria/core/dist/index.mjs","webpack://_N_E/./node_modules/@linaria/react/dist/index.mjs","webpack://_N_E/./node_modules/@sds/smsfield/node_modules/@sds/icon/lib/index.esm.js","webpack://_N_E/./node_modules/@sds/smsfield/node_modules/@sds/loader/lib/index.esm.js","webpack://_N_E/./node_modules/@sds/smsfield/lib/index.esm.js","webpack://_N_E/./src/ui/layouts/DefaultLayout/styles.ts","webpack://_N_E/./src/ui/layouts/DefaultLayout/DefaultLayout.tsx","webpack://_N_E/./src/ui/layouts/DefaultLayout/index.ts","webpack://_N_E/./src/ui/pages/IndexPage/IndexPage.tsx","webpack://_N_E/./src/ui/pages/IndexPage/index.ts","webpack://_N_E/./src/pages/index.tsx","webpack://_N_E/","webpack://_N_E/./node_modules/@sds/smsfield/lib/style.css","webpack://_N_E/./node_modules/@sds/smsfield/node_modules/@sds/icon/lib/style.css","webpack://_N_E/./node_modules/@sds/smsfield/node_modules/@sds/loader/lib/style.css","webpack://_N_E/./src/ui/layouts/DefaultLayout/styles.ts?8b52","webpack://_N_E/<anon>"],"sourcesContent":["function memoize(fn) {\n  var cache = Object.create(null);\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport { memoize as default };\n","import memoize from '@emotion/memoize';\n\nvar reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/; // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23\n\nvar isPropValid = /* #__PURE__ */memoize(function (prop) {\n  return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111\n  /* o */\n  && prop.charCodeAt(1) === 110\n  /* n */\n  && prop.charCodeAt(2) < 91;\n}\n/* Z+1 */\n);\n\nexport { isPropValid as default };\n","// src/css.ts\nvar idx = 0;\nvar css = () => {\n  if (process.env.NODE_ENV === \"test\") {\n    return `mocked-css-${idx++}`;\n  }\n  throw new Error(\n    'Using the \"css\" tag in runtime is not supported. Make sure you have set up the Babel plugin correctly.'\n  );\n};\nvar css_default = css;\n\n// src/cx.ts\nvar cx = function cx2() {\n  const presentClassNames = Array.prototype.slice.call(arguments).filter(Boolean);\n  const atomicClasses = {};\n  const nonAtomicClasses = [];\n  presentClassNames.forEach((arg) => {\n    const individualClassNames = arg ? arg.split(\" \") : [];\n    individualClassNames.forEach((className) => {\n      if (className.startsWith(\"atm_\")) {\n        const [, keyHash] = className.split(\"_\");\n        atomicClasses[keyHash] = className;\n      } else {\n        nonAtomicClasses.push(className);\n      }\n    });\n  });\n  const result = [];\n  for (const keyHash in atomicClasses) {\n    if (Object.prototype.hasOwnProperty.call(atomicClasses, keyHash)) {\n      result.push(atomicClasses[keyHash]);\n    }\n  }\n  result.push(...nonAtomicClasses);\n  return result.join(\" \");\n};\nvar cx_default = cx;\nexport {\n  css_default as css,\n  cx_default as cx\n};\n//# sourceMappingURL=index.mjs.map","// src/styled.ts\nimport validAttr from \"@emotion/is-prop-valid\";\nimport React from \"react\";\nimport { cx } from \"@linaria/core\";\nvar isCapital = (ch) => ch.toUpperCase() === ch;\nvar filterKey = (keys) => (key) => keys.indexOf(key) === -1;\nvar omit = (obj, keys) => {\n  const res = {};\n  Object.keys(obj).filter(filterKey(keys)).forEach((key) => {\n    res[key] = obj[key];\n  });\n  return res;\n};\nfunction filterProps(asIs, props, omitKeys) {\n  const filteredProps = omit(props, omitKeys);\n  if (!asIs) {\n    const interopValidAttr = typeof validAttr === \"function\" ? { default: validAttr } : validAttr;\n    Object.keys(filteredProps).forEach((key) => {\n      if (!interopValidAttr.default(key)) {\n        delete filteredProps[key];\n      }\n    });\n  }\n  return filteredProps;\n}\nvar warnIfInvalid = (value, componentName) => {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof value === \"string\" || typeof value === \"number\" && isFinite(value)) {\n      return;\n    }\n    const stringified = typeof value === \"object\" ? JSON.stringify(value) : String(value);\n    console.warn(\n      `An interpolation evaluated to '${stringified}' in the component '${componentName}', which is probably a mistake. You should explicitly cast or transform the value to a string.`\n    );\n  }\n};\nvar idx = 0;\nfunction styled(tag) {\n  var _a;\n  let mockedClass = \"\";\n  if (process.env.NODE_ENV === \"test\") {\n    mockedClass += `mocked-styled-${idx++}`;\n    if ((_a = tag == null ? void 0 : tag.__linaria) == null ? void 0 : _a.className) {\n      mockedClass += ` ${tag.__linaria.className}`;\n    }\n  }\n  return (options) => {\n    if (process.env.NODE_ENV !== \"production\" && process.env.NODE_ENV !== \"test\") {\n      if (Array.isArray(options)) {\n        throw new Error(\n          'Using the \"styled\" tag in runtime is not supported. Make sure you have set up the Babel plugin correctly. See https://github.com/callstack/linaria#setup'\n        );\n      }\n    }\n    const render = (props, ref) => {\n      const { as: component = tag, class: className = mockedClass } = props;\n      const shouldKeepProps = options.propsAsIs === void 0 ? !(typeof component === \"string\" && component.indexOf(\"-\") === -1 && !isCapital(component[0])) : options.propsAsIs;\n      const filteredProps = filterProps(shouldKeepProps, props, [\n        \"as\",\n        \"class\"\n      ]);\n      filteredProps.ref = ref;\n      filteredProps.className = options.atomic ? cx(options.class, filteredProps.className || className) : cx(filteredProps.className || className, options.class);\n      const { vars } = options;\n      if (vars) {\n        const style = {};\n        for (const name in vars) {\n          const variable = vars[name];\n          const result = variable[0];\n          const unit = variable[1] || \"\";\n          const value = typeof result === \"function\" ? result(props) : result;\n          warnIfInvalid(value, options.name);\n          style[`--${name}`] = `${value}${unit}`;\n        }\n        const ownStyle = filteredProps.style || {};\n        const keys = Object.keys(ownStyle);\n        if (keys.length > 0) {\n          keys.forEach((key) => {\n            style[key] = ownStyle[key];\n          });\n        }\n        filteredProps.style = style;\n      }\n      if (tag.__linaria && tag !== component) {\n        filteredProps.as = component;\n        return React.createElement(tag, filteredProps);\n      }\n      return React.createElement(component, filteredProps);\n    };\n    const Result = React.forwardRef ? React.forwardRef(render) : (props) => {\n      const rest = omit(props, [\"innerRef\"]);\n      return render(rest, props.innerRef);\n    };\n    Result.displayName = options.name;\n    Result.__linaria = {\n      className: options.class || mockedClass,\n      extends: tag\n    };\n    return Result;\n  };\n}\nvar styled_default = process.env.NODE_ENV !== \"production\" ? new Proxy(styled, {\n  get(o, prop) {\n    return o(prop);\n  }\n}) : styled;\nexport {\n  styled_default as styled\n};\n//# sourceMappingURL=index.mjs.map","import { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { styled } from '@linaria/react';\nimport './style.css';\n\n\nconst getIconMaskImage = ({\n  sizeProp,\n  nameProp\n}) => {\n  const size = sizeProp >= 24 ? 24 : 16;\n  return `url(https://cdn-sds.obs.ru-moscow-1.hc.sbercloud.ru/sds-icons/${size}-${nameProp}.svg?v=1)`;\n};\nconst getIconSize = ({\n  sizeProp\n}) => `${sizeProp}px`;\nconst _exp3 = () => getIconMaskImage;\nconst _exp4 = () => getIconSize;\nconst Icon$1 = /*#__PURE__*/styled('span')({\n  name: \"Icon\",\n  class: \"sdsIcon__igwdj7z\",\n  propsAsIs: false,\n  vars: {\n    \"igwdj7z-0\": [_exp4()],\n    \"igwdj7z-1\": [_exp3()]\n  }\n});\nconst _exp5 = () => Icon$1;\nconst AnimatedIcon = /*#__PURE__*/styled(_exp5())({\n  name: \"AnimatedIcon\",\n  class: \"sdsIcon__ahhycyd\",\n  propsAsIs: true\n});\n\nconst Icon = forwardRef(({ size, name, ...props }, ref) => {\r\n    return name === 'spinnerLoader' ? (jsx(AnimatedIcon, { nameProp: name, ref: ref, sizeProp: size, ...props })) : (jsx(Icon$1, { nameProp: name, ref: ref, sizeProp: size, ...props }));\r\n});\n\nexport { Icon };\n//# sourceMappingURL=index.esm.js.map\n","import { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { Icon } from '@sds/icon';\nimport { styled } from '@linaria/react';\nimport './style.css';\n\n\nconst loaderColorBackgroundAccent = 'var(--surface-ondark-transparent-tertiary)';\r\nconst loaderColorBackgroundDefault = 'var(--surface-ondark-transparent-tertiary)';\r\nconst loaderColorBackgroundWhite = 'var(--surface-onlight-transparent-tertiary)';\r\nconst loaderColorSpinnerAccent = 'var(--text-icons-default-accent-primary)';\r\nconst loaderColorSpinnerDefault = 'var(--text-icons-onlight-general-primary)';\r\nconst loaderColorSpinnerWhite = 'var(--text-icons-ondark-general-primary)';\r\nconst loaderSpaceSizeL = '48px';\r\nconst loaderSpaceSizeM = '40px';\r\nconst loaderSpaceSizeS = '32px';\r\nconst loaderSpaceSizeXs = '24px';\n\nconst variantConfig = {\n  accent: {\n    backgroundColor: loaderColorBackgroundAccent,\n    color: loaderColorSpinnerAccent\n  },\n  white: {\n    backgroundColor: loaderColorBackgroundWhite,\n    color: loaderColorSpinnerWhite\n  },\n  default: {\n    backgroundColor: loaderColorBackgroundDefault,\n    color: loaderColorSpinnerDefault\n  }\n};\nconst getLoaderBlur = ({\n  hasBackground\n}) => hasBackground ? 'blur(4px)' : 'none';\nconst getLoaderColor = ({\n  variant,\n  customColors\n}) => {\n  if (customColors === undefined && variant !== undefined) {\n    return variantConfig[variant].color;\n  }\n  if (customColors !== undefined) {\n    return customColors.color;\n  }\n  return 'currentColor';\n};\nconst getLoaderBackgroundColor = ({\n  variant,\n  hasBackground,\n  customColors\n}) => {\n  if (!hasBackground) {\n    return 'transparent';\n  }\n  if (customColors === undefined) {\n    return variantConfig[variant].backgroundColor;\n  }\n  return customColors.background;\n};\nconst sizeConfig = {\n  l: loaderSpaceSizeL,\n  m: loaderSpaceSizeM,\n  s: loaderSpaceSizeS,\n  xs: loaderSpaceSizeXs\n};\nconst getLoaderSize = ({\n  size\n}) => sizeConfig[size];\nconst _exp2 = () => getLoaderSize;\nconst _exp3 = () => getLoaderBlur;\nconst _exp4 = () => getLoaderBackgroundColor;\nconst _exp5 = () => getLoaderColor;\nconst Loader$1 = /*#__PURE__*/styled('span')({\n  name: \"Loader\",\n  class: \"sdsLoader__lgwdj7z\",\n  propsAsIs: false,\n  vars: {\n    \"lgwdj7z-0\": [_exp2()],\n    \"lgwdj7z-1\": [_exp3()],\n    \"lgwdj7z-2\": [_exp4()],\n    \"lgwdj7z-3\": [_exp5()]\n  }\n});\n\nconst Loader = forwardRef((props, ref) => {\r\n    const { variant = 'default', size = 'm', hasBackground = false, customColors } = props;\r\n    const spinnerLoaderSizeConfig = {\r\n        l: 36,\r\n        m: 24,\r\n        s: 24,\r\n        xs: 16,\r\n    };\r\n    return (jsx(Loader$1, { customColors: customColors, hasBackground: hasBackground, ...props, ref: ref, size: size, variant: variant, children: jsx(Icon, { name: \"spinnerLoader\", size: spinnerLoaderSizeConfig[size] }) }));\r\n});\n\nexport { Loader };\n//# sourceMappingURL=index.esm.js.map\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useRef, useState, useCallback, useEffect } from 'react';\nimport { Loader } from '@sds/loader';\nimport { styled } from '@linaria/react';\nimport './style.css';\n\n\nconst smsfieldColorColorFieldBackgroundDefault = 'var(--surface-default-solid-primary)';\r\nconst smsfieldColorColorFieldBackgroundWarning = 'var(--surface-default-status-warning-softer)';\r\nconst smsfieldColorColorTextDefault = 'var(--text-icons-default-general-primary)';\r\nconst smsfieldColorColorTextReadonly = 'var(--text-icons-default-general-secondary)';\n\nconst getCharFieldOpacity = ({\n  variant,\n  disabled\n}) => variant === 'loading' || disabled ? 0.5 : 1;\nconst Container = /*#__PURE__*/styled('div')({\n  name: \"Container\",\n  class: \"sdsSMSField__cgwdj7z\",\n  propsAsIs: false\n});\nconst CharFieldsContainer = /*#__PURE__*/styled('div')({\n  name: \"CharFieldsContainer\",\n  class: \"sdsSMSField__chhycyd\",\n  propsAsIs: false\n});\nconst charFieldBackgroundColorConfig = {\n  default: smsfieldColorColorFieldBackgroundDefault,\n  warning: smsfieldColorColorFieldBackgroundWarning,\n  loading: smsfieldColorColorFieldBackgroundDefault\n};\nconst getCharFieldBackgroundColor = ({\n  variant,\n  isError\n}) => isError ? charFieldBackgroundColorConfig.warning : charFieldBackgroundColorConfig[variant];\nconst charFieldTextColorConfig = {\n  default: smsfieldColorColorTextDefault,\n  warning: smsfieldColorColorTextDefault,\n  loading: smsfieldColorColorTextReadonly\n};\nconst getCharFieldTextColor = ({\n  variant\n}) => charFieldTextColorConfig[variant];\nconst _exp6 = () => getCharFieldBackgroundColor;\nconst _exp9 = () => getCharFieldTextColor;\nconst _exp12 = () => getCharFieldOpacity;\nconst CharField = /*#__PURE__*/styled('input')({\n  name: \"CharField\",\n  class: \"sdsSMSField__c138vcdl\",\n  propsAsIs: false,\n  vars: {\n    \"c138vcdl-0\": [_exp6()],\n    \"c138vcdl-1\": [_exp9()],\n    \"c138vcdl-2\": [_exp12()]\n  }\n});\nconst ErrorMessage = /*#__PURE__*/styled('p')({\n  name: \"ErrorMessage\",\n  class: \"sdsSMSField__e2rlal3\",\n  propsAsIs: false\n});\nconst LoaderContainer = /*#__PURE__*/styled('div')({\n  name: \"LoaderContainer\",\n  class: \"sdsSMSField__l1yy1ila\",\n  propsAsIs: false\n});\n\nconst ForwardRefRenderFunction = ({ variant = 'default', length = 6, errorMessage = 'Неверный код', value, name, disabled = false, autoComplete = 'off', onChange, onComplete, inputMode, ...props }, ref) => {\r\n    const mainInputRef = useRef();\r\n    const charFieldsRef = useRef(new Map());\r\n    const valueAsString = value === undefined ? '' : String(value);\r\n    const [localValue, setLocalValue] = useState([...valueAsString].slice(0, length));\r\n    const charFieldsCallbackRef = useCallback((node, index) => {\r\n        if (node)\r\n            charFieldsRef.current.set(index, node);\r\n        else\r\n            charFieldsRef.current.delete(index);\r\n    }, []);\r\n    // эффект, чтобы вручную триггерить событие input на главном инпуте.\r\n    // это нужно, чтобы срабатывал проп onChange.\r\n    // ручной триггер события change с нативным обработчиком onChange не работает в реакте,\r\n    // поэтому приходится использовать событие input\r\n    useEffect(() => {\r\n        if (localValue.join('') !== valueAsString) {\r\n            const event = new Event('input', { bubbles: true });\r\n            mainInputRef.current?.dispatchEvent(event);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [localValue]);\r\n    // эффект для программного сеттинга пропа value из родительского компонента.\r\n    // например: <Parent onClick(() => setValue('')) />\r\n    useEffect(() => {\r\n        charFieldsRef.current.forEach((input, index) => {\r\n            // eslint-disable-next-line no-param-reassign\r\n            input.value = valueAsString[index] ?? '';\r\n        });\r\n    }, [valueAsString]);\r\n    useEffect(() => {\r\n        if (valueAsString.length === length) {\r\n            onComplete?.();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [valueAsString, length]);\r\n    const setInputValue = (index, newValue) => {\r\n        let charFieldsValues = [...charFieldsRef.current.values()].map((input) => input.value);\r\n        if (newValue.length === 1) {\r\n            charFieldsValues[index] = newValue;\r\n        }\r\n        else if (newValue.length === length) {\r\n            charFieldsValues = [...newValue];\r\n        }\r\n        else {\r\n            charFieldsValues.splice(index, 1, ...newValue);\r\n            charFieldsValues.length = length;\r\n        }\r\n        setLocalValue(charFieldsValues);\r\n    };\r\n    // функция, чтобы очищать value активного инпута перед тем, как в него будет введено новое значение.\r\n    // нужно, чтобы работала логика вставки\r\n    const clearInputValue = (index) => {\r\n        charFieldsRef.current.get(index).value = '';\r\n    };\r\n    const deleteCharFieldValue = (index) => {\r\n        clearInputValue(index);\r\n        setInputValue(index, '');\r\n    };\r\n    const handleDeleteWhenActiveInputIsFilled = (index) => {\r\n        const indexToFocus = index === length - 1 ? length - 1 : index;\r\n        const targetInput = charFieldsRef.current.get(indexToFocus);\r\n        targetInput.focus();\r\n        deleteCharFieldValue(index);\r\n    };\r\n    const handleDeleteWhenActiveInputIsEmpty = (index) => {\r\n        const indexToFocus = index === length - 1 ? length - 1 : index + 1;\r\n        const targetInput = charFieldsRef.current.get(indexToFocus);\r\n        targetInput.focus();\r\n        deleteCharFieldValue(indexToFocus);\r\n    };\r\n    const handleBackspaceWhenActiveInputIsFilled = (index) => {\r\n        const indexToFocus = index <= 0 ? 0 : index;\r\n        const targetInput = charFieldsRef.current.get(indexToFocus);\r\n        targetInput.focus();\r\n        deleteCharFieldValue(index);\r\n    };\r\n    const handleBackspaceWhenActiveInputIsEmpty = (index) => {\r\n        const indexToFocus = index <= 0 ? 0 : index - 1;\r\n        const targetInput = charFieldsRef.current.get(indexToFocus);\r\n        targetInput.focus();\r\n        deleteCharFieldValue(indexToFocus);\r\n    };\r\n    // функция, чтобы управлять фокусом и поведением кнопок Delete и Backspace\r\n    const handleKeyDown = (event, index) => {\r\n        if (['ArrowRight', 'ArrowLeft', 'ArrowUp', 'ArrowDown'].includes(event.key)) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n        const inputAtActiveIndexIsFilled = charFieldsRef.current.get(index).value.length > 0;\r\n        const inputAtActiveIndexIsEmpty = !inputAtActiveIndexIsFilled;\r\n        const eventTargetIsInputAndKeyIsNumber = event.target instanceof HTMLInputElement &&\r\n            [1, 2, 3, 4, 5, 6, 7, 8, 9, 0].includes(Number(event.key));\r\n        if (eventTargetIsInputAndKeyIsNumber)\r\n            clearInputValue(index);\r\n        if (event.key === 'Backspace' && inputAtActiveIndexIsFilled)\r\n            handleBackspaceWhenActiveInputIsFilled(index);\r\n        else if (event.key === 'Backspace' && inputAtActiveIndexIsEmpty)\r\n            handleBackspaceWhenActiveInputIsEmpty(index);\r\n        if (event.key === 'Delete' && inputAtActiveIndexIsFilled)\r\n            handleDeleteWhenActiveInputIsFilled(index);\r\n        else if (event.key === 'Delete' && inputAtActiveIndexIsEmpty)\r\n            handleDeleteWhenActiveInputIsEmpty(index);\r\n    };\r\n    const handleCharFieldChange = (event, index) => {\r\n        const inputValue = event.target.value;\r\n        if (!/^\\d+$/.test(inputValue)) {\r\n            event.preventDefault();\r\n            return;\r\n        }\r\n        charFieldsRef.current.get(index === length - 1 ? index : index + 1).focus();\r\n        setInputValue(index, inputValue);\r\n    };\r\n    return (jsxs(Container, { children: [jsx(\"input\", { name: name, ref: (instance) => {\r\n                    mainInputRef.current = instance;\r\n                    if (typeof ref === 'function') {\r\n                        ref(instance);\r\n                    }\r\n                    else if (ref) {\r\n                        // eslint-disable-next-line no-param-reassign\r\n                        ref.current = instance;\r\n                    }\r\n                }, type: \"hidden\", value: localValue.join(''), onInput: onChange }), jsxs(CharFieldsContainer, { children: [Array.from({ length }).map((_, index) => {\r\n                        return (jsx(CharField, { \"aria-label\": `Поле для ввода СМС кода ${index + 1}`, autoComplete: autoComplete, disabled: variant === 'loading' || disabled, inputMode: inputMode ?? 'numeric', isError: variant === 'warning', ref: (node) => charFieldsCallbackRef(node, index), value: charFieldsRef?.current?.get(index)?.value ?? '', variant: variant, onChange: (e) => handleCharFieldChange(e, index), onKeyDown: (e) => handleKeyDown(e, index), onPaste: () => clearInputValue(index), ...props }, index));\r\n                    }), variant === 'loading' && (jsx(LoaderContainer, { children: jsx(Loader, { size: \"l\", variant: \"accent\" }) }))] }), variant === 'warning' && errorMessage.length > 0 && (jsx(ErrorMessage, { children: errorMessage }))] }));\r\n};\r\nconst SMSField = forwardRef(ForwardRefRenderFunction);\n\nexport { SMSField };\n//# sourceMappingURL=index.esm.js.map\n","import { styled } from '@linaria/react';\nexport const Layout = /*#__PURE__*/styled('div')({\n  name: \"Layout\",\n  class: \"lqeiq48\",\n  propsAsIs: false\n});\n\nrequire(\"./styles.linaria.module.css!=!../../../../node_modules/@linaria/webpack4-loader/lib/outputCssLoader.js?cacheProvider=!./styles.ts\");","import * as s from './styles'\n\ninterface IProps {\n  children: React.ReactNode\n}\n\nexport const DefaultLayout = ({ children }: IProps) => {\n  return <s.Layout>{children}</s.Layout>\n}\n","export { DefaultLayout } from './DefaultLayout'\n","import { SMSField } from '@sds/smsfield'\nimport { useEffect, useState } from 'react'\n\nimport { DefaultLayout } from '@/ui/layouts/DefaultLayout'\n\nexport const IndexPage = () => {\n  useEffect(() => {\n    if ('OTPCredential' in window) {\n      window.addEventListener('DOMContentLoaded', (e) => {\n        const input = document.querySelector('input[autocomplete=\"one-time-code\"]')\n\n        if (!input) return\n        // Set up an AbortController to use with the OTP request\n        const ac = new AbortController()\n        const form = input.closest('form')\n\n        if (form) {\n          // Abort the OTP request if the user attempts to submit the form manually\n          form.addEventListener('submit', () => {\n            ac.abort()\n          })\n        }\n        // Request the OTP via get()\n        navigator.credentials\n          .get({\n            // @ts-ignore\n            otp: { transport: ['sms'] },\n            signal: ac.signal,\n          })\n          .then((otp) => {\n            // When the OTP is received by the app client, enter it into the form\n            // input and submit the form automatically\n            // @ts-ignore\n            input.value = otp.code\n\n            if (form) form.submit()\n          })\n          .catch((error) => {\n            console.error(error)\n          })\n      })\n    }\n  }, [])\n  const [value, setValue] = useState('')\n  console.log(value)\n\n  return (\n    <DefaultLayout>\n      <div>\n        <h1>Index Page</h1>\n        <form>\n          <SMSField\n            autoComplete=\"one-time-code\"\n            inputMode=\"numeric\"\n            type=\"text\"\n            value={value}\n            onChange={(e) => {\n              setValue(e.target.value)\n            }}\n          />\n        </form>\n      </div>\n    </DefaultLayout>\n  )\n}\n","export { IndexPage } from './IndexPage'\n","import { IndexPage } from '@/ui/pages/IndexPage'\n\nconst Index = () => <IndexPage />\n\nexport default Index\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin"],"names":["cache","reactPropsRegex","isPropValid","Object","create","arg","undefined","test","prop","charCodeAt","cx_default","presentClassNames","Array","prototype","slice","call","arguments","filter","Boolean","atomicClasses","nonAtomicClasses","forEach","individualClassNames","split","className","startsWith","keyHash","push","result","hasOwnProperty","join","isCapital","ch","toUpperCase","filterKey","keys","indexOf","key","omit","obj","res","warnIfInvalid","value","componentName","styled_default","tag","render","props","ref","as","component","class","filteredProps","filterProps","asIs","omitKeys","interopValidAttr","default","options","propsAsIs","atomic","vars","style","name","variable","unit","ownStyle","length","__linaria","react","createElement","Result","forwardRef","innerRef","displayName","extends","Icon$1","sizeProp","nameProp","AnimatedIcon","Icon","size","jsx_runtime","jsx","variantConfig","accent","backgroundColor","color","white","sizeConfig","l","m","s","xs","Loader$1","hasBackground","variant","customColors","background","Loader","children","spinnerLoaderSizeConfig","smsfieldColorColorFieldBackgroundDefault","smsfieldColorColorTextDefault","Container","CharFieldsContainer","charFieldBackgroundColorConfig","warning","loading","charFieldTextColorConfig","CharField","isError","disabled","ErrorMessage","LoaderContainer","SMSField","errorMessage","autoComplete","onChange","onComplete","inputMode","mainInputRef","useRef","charFieldsRef","Map","valueAsString","String","localValue","setLocalValue","useState","charFieldsCallbackRef","useCallback","node","index","current","set","delete","useEffect","event","Event","bubbles","dispatchEvent","input","setInputValue","newValue","charFieldsValues","values","map","splice","clearInputValue","get","deleteCharFieldValue","handleDeleteWhenActiveInputIsFilled","indexToFocus","targetInput","focus","handleDeleteWhenActiveInputIsEmpty","handleBackspaceWhenActiveInputIsFilled","handleBackspaceWhenActiveInputIsEmpty","handleKeyDown","includes","preventDefault","inputAtActiveIndexIsFilled","inputAtActiveIndexIsEmpty","target","HTMLInputElement","Number","handleCharFieldChange","inputValue","jsxs","instance","type","onInput","from","_","e","onKeyDown","onPaste","Layout","styled","require","DefaultLayout","_ref","_jsx","IndexPage","window","addEventListener","document","querySelector","ac","AbortController","form","closest","abort","navigator","credentials","otp","transport","signal","then","code","submit","error","console","_useState","setValue","log","_jsxs","pages","__NEXT_P","__webpack_require__"],"sourceRoot":""}